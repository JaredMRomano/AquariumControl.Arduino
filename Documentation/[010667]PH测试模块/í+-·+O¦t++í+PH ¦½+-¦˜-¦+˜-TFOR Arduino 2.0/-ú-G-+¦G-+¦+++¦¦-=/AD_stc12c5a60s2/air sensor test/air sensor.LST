C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE AIR_SENSOR
OBJECT MODULE PLACED IN air sensor.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE air sensor.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /******************************************************************** 
   2                                                  龙戈电子 
   3          实现功能:最小系统版气体传感器测试程序 
   4          使用芯片：STC12C5A60S2 
   5          晶振：11.0592MHZ 
   6          波特率：9600 
   7          编译环境：Keil 
   8          作者：LOGO  
   9          网站：www.auto-ctrl.com 
  10          【声明】此程序仅用于学习与参考，引用请注明版权和作者信息！       
  11          *********************************************************************/ 
  12          /******************************************************************** 
  13          说明：1、测试程序开始前会先对气体传感器进行加热
  14                2、AOUT为模拟电压输出口 1602上A为10位AD转换值  V为对应的模拟电压值  
  15                3、 当气体浓度大于设定值时 传感器DOUT脚输出低电平 蜂鸣器响
  16          *********************************************************************/ 
  17          #include <reg51.h>
  18          #include <intrins.h>
  19          
  20          #define uchar unsigned char
  21          #define uint  unsigned int 
  22          
  23          typedef unsigned char BYTE;
  24          typedef bit BOOL;  
  25          
  26          sfr   AUXR1     =   0xA2;
  27          sfr   ADC_CONTR     =   0xBC;              //ADC control register
  28          sfr   ADC_RES       =   0xBD;              //ADC high 8-bit result register
  29          sfr       ADC_RESl       =         0xBE;
  30          sfr   P1ASF         =   0x9D;              //P1 secondary function control register
  31          
  32          #define   FOSC   18432000L
  33          #define   T1MS   (65536-FOSC/12/2000)      //1ms timer calculation method in 12T mode
  34          
  35          
  36          #define   ADC_POWER     0x80               //ADC power control bit
  37          #define   ADC_FLAG      0x10               //ADC complete flag
  38          #define   ADC_START    0x08               //ADC start control bit
  39          #define   ADC_SPEEDLL   0x00               //540 clocks
  40          #define   ADC_SPEEDL    0x20               //360 clocks
  41          #define   ADC_SPEEDH   0x40               //180 clocks
  42          #define   ADC_SPEEDHH   0x60               //90 clocks
  43          
  44          int i,j,display=0,t02s;
  45          double c;
  46          int cdisplay,low2;
  47          int  wendufazhi=50;
  48          int count,tt=30; 
  49          sbit LCD_RS = P2^5;             
  50          sbit LCD_RW = P2^6;
  51          sbit LCD_EP = P2^7;
  52          sbit warning = P3^2;
  53          sbit beep = P3^4;
  54          //////////////显示数组
  55          BYTE code dis1[] = {"   welcom  to   "};
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 2   

  56          BYTE code dis2[] = {"3w.auto-ctrl.com"};
  57          BYTE code dis3[] = {"TEST...   "};
  58          BYTE code dis5[] = {"www.auto-ctrl.com"};
  59          BYTE code Dangerous[] = {"Dangerous    "};
  60          BYTE code Safe[] = {"Safe           "};
  61          BYTE code Heat[] = {"Heat.....      "};
  62          BYTE code Wait[] = {"Wait "};
  63          
  64          uchar   tab2[]={'v','o','l','t','a','g','e'};
  65          
  66          void InitADC();
  67          void ADC();
  68          void flash(); 
  69          unsigned int GetADCResult(int ch);
  70          void ADC();
  71          void delay(int ms)
  72          {                           // 延时子程序
  73   1              while(ms--)
  74   1              {
  75   2                for(i = 0; i< 250; i++)
  76   2                {
  77   3                 _nop_();
  78   3                 _nop_();
  79   3                 _nop_();
  80   3                 _nop_();
  81   3                }
  82   2              }
  83   1      }
  84          
  85          BOOL lcd_bz()
  86          {                          // 测试LCD忙碌状态
  87   1      BOOL result;
  88   1      LCD_RS = 0;
  89   1      LCD_RW = 1;
  90   1      LCD_EP = 1;
  91   1      _nop_();
  92   1      _nop_();
  93   1      _nop_();
  94   1      _nop_();
  95   1      result = (BOOL)(P0 & 0x80);
  96   1      LCD_EP = 0;
  97   1      return result; 
  98   1      }
  99          
 100          void lcd_wcmd(BYTE cmd)
 101          {                          // 写入指令数据到LCD
 102   1      while(lcd_bz());
 103   1      LCD_RS = 0;
 104   1      LCD_RW = 0;
 105   1      LCD_EP = 0;
 106   1      _nop_();
 107   1      _nop_(); 
 108   1      P0 = cmd;
 109   1      _nop_();
 110   1      _nop_();
 111   1      _nop_();
 112   1      _nop_();
 113   1      LCD_EP = 1;
 114   1      _nop_();
 115   1      _nop_();
 116   1      _nop_();
 117   1      _nop_();
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 3   

 118   1      LCD_EP = 0;  
 119   1      }
 120          
 121          void lcd_pos(BYTE pos)
 122          {                          //设定显示位置
 123   1      lcd_wcmd(pos | 0x80);
 124   1      }
 125          
 126          void lcd_wdat(BYTE dat) 
 127          {                          //写入字符显示数据到LCD
 128   1      while(lcd_bz());
 129   1      LCD_RS = 1;
 130   1      LCD_RW = 0;
 131   1      LCD_EP = 0;
 132   1      P0 = dat;
 133   1      _nop_();
 134   1      _nop_();
 135   1      _nop_();
 136   1      _nop_();
 137   1      LCD_EP = 1;
 138   1      _nop_();
 139   1      _nop_();
 140   1      _nop_();
 141   1      _nop_();
 142   1      LCD_EP = 0; 
 143   1      }
 144          
 145          void lcd_init()
 146          {                        //LCD初始化设定
 147   1      lcd_wcmd(0x38);          //16*2显示，5*7点阵，8位数据
 148   1      delay(1);
 149   1      lcd_wcmd(0x0c);          //显示开，关光标
 150   1      delay(1);
 151   1      lcd_wcmd(0x06);          //移动光标
 152   1      delay(1);
 153   1      lcd_wcmd(0x01);          //清除LCD的显示内容
 154   1      delay(1);
 155   1      }
 156          
 157          main()
 158          {
 159   1            BYTE i;
 160   1                int j=0;
 161   1            lcd_init();               // 初始化LCD
 162   1            delay(10);
 163   1           lcd_wcmd(0x06);            //向右移动光标
 164   1               InitADC();
 165   1                TMOD   = 0x01;                      //set timer0 as mode1 (16-bit)
 166   1            TL0   = T1MS;                       //initial timer0 low byte
 167   1            TH0   = T1MS >> 8;                  //initial timer0 high byte
 168   1          while(1)              
 169   1         { 
 170   2                switch(display) 
 171   2            { 
 172   3                  case 0:  
 173   3                      {          
 174   4                     i=0;
 175   4                         while(dis2[ i ] != '\0')
 176   4                         {
 177   5                                lcd_pos(0x80+i);
 178   5                                lcd_wdat(dis2[i]);
 179   5                                i++;
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 4   

 180   5                                delay(300);           
 181   5                         }
 182   4                        flash();
 183   4                        lcd_wcmd(0x01);            //清除LCD的显示内容
 184   4                delay(20);                //控制两屏转换时间
 185   4                        display = 1;          
 186   4                        lcd_wcmd(0x06);            //向右移动光标
 187   4                      }
 188   3                      break; 
 189   3                  case 1:  
 190   3                      {
 191   4                        delay(300);
 192   4                    i = 0;                                                               
 193   4                   while(dis1[i] != '\0')                                                
 194   4                   {                                      //显示字符"         "   
 195   5                     
 196   5                          lcd_pos(0x8A+i);               //设置显示位置为第一行第17列            
 197   5                 lcd_wdat(dis1[i]);                                                  
 198   5                     i++;                                                                
 199   5                   } 
 200   4                       delay(300);
 201   4                      i = 0;
 202   4               while(dis5[i] != '\0')                                                
 203   4                   {   
 204   5                         lcd_pos(0x4f+i);               //设置显示位置为第一行第17列                                          
             -   //显示字符"         "   
 205   5                     lcd_wdat(dis5[i]);                                                  
 206   5                     i++;                                                                
 207   5                   }   
 208   4                       delay(300);                                                       
 209   4                   for(j=0;j<16;j++)           //向左移动16格                           
 210   4                   {                                                                     
 211   5                     lcd_wcmd(0x18);           //字符同时左移一格                        
 212   5                     delay(800);                   //控制移动时间                        
 213   5                   }                                                                     
 214   4                       display=2;  
 215   4                      }
 216   3                      break;
 217   3      
 218   3                  case 2:  
 219   3                      {          
 220   4                        flash();
 221   4                        delay(1000);
 222   4                        lcd_wcmd(0x01);            //清除LCD的显示内容
 223   4                delay(20);                //控制两屏转换时间
 224   4                        display = 3;          
 225   4                        lcd_wcmd(0x06);            //向右移动光标
 226   4                      } 
 227   3                      break;
 228   3                 case 3:  
 229   3                      {
 230   4                          i=0;
 231   4                              while(Heat[ i ] != '\0')
 232   4                              {
 233   5                                 lcd_pos(0x80+i);
 234   5                                 lcd_wdat(Heat[i]);
 235   5                         i++;
 236   5                         delay(30);
 237   5                              }
 238   4                              i=0;
 239   4                              while(Wait[ i ] != '\0')
 240   4                              {
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 5   

 241   5                                 lcd_pos(0x40+i);
 242   5                                 lcd_wdat(Wait[i]);
 243   5                         i++;
 244   5                         delay(30);
 245   5                              }
 246   4                              lcd_pos(0x47);
 247   4                              lcd_wdat('S');
 248   4                              delay(30);
 249   4                              display = 4;
 250   4                      }
 251   3                      break;
 252   3                  case 4:  
 253   3                      {
 254   4                                 
 255   4                                 lcd_pos(0x45);
 256   4                                 lcd_wdat(tt/10+0x30);
 257   4                                 delay(10);                
 258   4                                 lcd_pos(0x46);
 259   4                                 lcd_wdat(tt%10+0x30);
 260   4                                 delay(10);                
 261   4      
 262   4                                 TR0   = 1;                           //timer0 start running
 263   4                     ET0   = 1;                           //enable timer0 interrupt
 264   4                     EA   = 1;                            //open global interrupt switch
 265   4                                 if(tt==0)
 266   4                                 {
 267   5                                         TR0   = 0;                           //timer0 start running
 268   5                         ET0   = 0;                           //enable timer0 interrupt
 269   5                         EA   = 0;                            //open global interrupt switch
 270   5                                        lcd_wcmd(0x01);            //清除LCD的显示内容
 271   5                        delay(10);                //控制两屏转换时间
 272   5                                display = 5;          
 273   5                                lcd_wcmd(0x06);            //向右移动光标
 274   5      
 275   5                                 }
 276   4                                 
 277   4        
 278   4                      }
 279   3                      break;
 280   3                      case 5:  
 281   3                      {          
 282   4                              i=0;
 283   4                              while(dis3[ i ] != '\0')
 284   4                              {
 285   5                                 lcd_pos(0x80+i);
 286   5                                 lcd_wdat(dis3[i]);
 287   5                         i++;
 288   5                         delay(30);
 289   5                              }
 290   4                              display=6;      
 291   4                      } 
 292   3                      break;
 293   3      
 294   3                      case 6:  
 295   3                      {          
 296   4                   
 297   4                               if(warning==0)          //传感器输出低电平
 298   4                               {
 299   5                                      if(warning==0)
 300   5                                      {
 301   6                                              i=0;
 302   6                                              while(Dangerous[ i ] != '\0')
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 6   

 303   6                                              {
 304   7                                                 lcd_pos(0x88+i);
 305   7                                                 lcd_wdat(Dangerous[i]);
 306   7                                         i++;
 307   7                                         delay(30);
 308   7                                              }
 309   6                                               for(i=0;i<3;i++)
 310   6                                               {
 311   7                                                       beep = 0;
 312   7                                                      delay(200);
 313   7                                                      beep = 1;
 314   7                                                      delay(200);     
 315   7                                              }               
 316   6                                  }
 317   5                               }
 318   4                      //////////////////////////////////////////
 319   4                           if(warning==1)
 320   4                               {
 321   5                                      if(warning==1)
 322   5                                      {
 323   6                                              i=0;
 324   6                                              while(Safe[ i ] != '\0')
 325   6                                              {
 326   7                                                 lcd_pos(0x88+i);
 327   7                                                 lcd_wdat(Safe[i]);
 328   7                                         i++;
 329   7                                         delay(30);
 330   7                                              }
 331   6                                  }
 332   5                               }      
 333   4                           ADC();
 334   4                      } 
 335   3                      break;
 336   3      
 337   3                      default:
 338   3                      break;
 339   3            }
 340   2      
 341   2         }
 342   1      }
 343          
 344          void flash()                                                               
 345          {                                                                          
 346   1            for(i=0;i<12;i++) 
 347   1                 {
 348   2              delay(600);                     //控制停留时间  
 349   2                 }                       
 350   1              lcd_wcmd(0x08);            //关闭显示                                  
 351   1            for(i=0;i<12;i++) 
 352   1                {
 353   2                      delay(200);                 
 354   2                }                                  
 355   1                 lcd_wcmd(0x0c);                                             
 356   1            for(i=0;i<12;i++) 
 357   1                {
 358   2                 delay(200); 
 359   2            }                                                          
 360   1            lcd_wcmd(0x08);                                            
 361   1            for(i=0;i<12;i++) 
 362   1                {
 363   2                 delay(200);                  
 364   2            }                                
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 7   

 365   1            lcd_wcmd(0x0c);                                                
 366   1            for(i=0;i<12;i++) 
 367   1                {
 368   2                  delay(200); 
 369   2            }                                                           
 370   1      } 
 371          void tm0_isr() interrupt 1 using 1
 372          {
 373   1            TL0 = T1MS;                         //reload timer0 low byte
 374   1            TH0 = T1MS >> 8;                    //reload timer0 high byte
 375   1            if (count-- == 0)                   //1ms * 1000 -> 1s
 376   1            {
 377   2                 count = 1000; 
 378   2                         tt--;
 379   2                         beep = 0;
 380   2                         delay(200);
 381   2                         beep=1;                              //reset counter
 382   2            }
 383   1      }
 384           
 385          void ADC()
 386          {
 387   1               int shu=0,shiwei=0,ya=0;    
 388   1      
 389   1               shiwei=GetADCResult(0);
 390   1                 lcd_pos(0x40);                //设置显示位置为第一行的第1个字符
 391   1                 lcd_wdat('A');
 392   1                 lcd_pos(0x41);                
 393   1                 lcd_wdat('=');         
 394   1                 lcd_pos(0x42);                
 395   1                 lcd_wdat(shiwei/1000+0x30);    
 396   1                 lcd_pos(0x43);                
 397   1                 lcd_wdat((shiwei%1000)/100+0x30);
 398   1                 lcd_pos(0x44);                
 399   1                 lcd_wdat((shiwei%100)/10+0x30);
 400   1                 lcd_pos(0x45);                
 401   1                 lcd_wdat((shiwei%10)+0x30);
 402   1                 c = ((double)shiwei*(5.50/1024))*100;
 403   1                 cdisplay =  (int)c;
 404   1                
 405   1                 lcd_pos(0x48);                
 406   1                 lcd_wdat('V');
 407   1                 lcd_pos(0x49);                
 408   1                 lcd_wdat('=');
 409   1                 lcd_pos(0x4a);                
 410   1                 lcd_wdat(cdisplay/100+0x30);
 411   1                 lcd_pos(0x4b);                
 412   1                 lcd_wdat('.');
 413   1                 lcd_pos(0x4c);                
 414   1                 lcd_wdat((cdisplay%100)/10+0x30);
 415   1                 lcd_pos(0x4e);                
 416   1                 lcd_wdat(cdisplay%10+0x30);
 417   1                 lcd_pos(0x4f); 
 418   1                 lcd_wdat('V');
 419   1                 delay(10);
 420   1                 
 421   1      }
 422          
 423          /*----------------------------
 424          Get ADC result
 425          ----------------------------*/
 426          unsigned int GetADCResult(int ch)
C51 COMPILER V9.00   AIR_SENSOR                                                            01/12/2012 13:38:37 PAGE 8   

 427          {
 428   1            ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
 429   1            _nop_();                            //Must wait before inquiry
 430   1            _nop_();
 431   1            _nop_();
 432   1            _nop_();
 433   1            while (!(ADC_CONTR & ADC_FLAG));  //Wait complete flag
 434   1            ADC_CONTR &= ~ADC_FLAG;           //Close ADC
 435   1                return (ADC_RES*4+ADC_RESl);     //Return ADC result
 436   1      }
 437          /*----------------------------
 438          Initial ADC sfr
 439          ----------------------------*/
 440          void InitADC()
 441          {
 442   1            P1ASF = 0xff;                       //Open 8 channels ADC function
 443   1                ADC_RES = 0;
 444   1                ADC_RESl = 0;                       //Clear previous result
 445   1            ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
 446   1            delay(2);                           //ADC power-on and delay
 447   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1338    ----
   CONSTANT SIZE    =    115    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
